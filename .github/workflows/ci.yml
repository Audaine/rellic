name: CI
on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    # run CI every day even if no PRs/merges occur
    - cron:  '0 6 * * *'
jobs:
  Native_Linux:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Native LLVM 8.0 on Ubuntu 18.04 Build
      run: |
        sudo apt-get -qq update
        sudo apt-get install -qqy ninja-build unzip curl libomp-dev libtinfo-dev lsb-release
        scripts/build.sh --llvm-version llvm800 --prefix /opt/trailofbits/rellic --use-host-compiler --extra-cmake-args "-DCMAKE_BUILD_TYPE=Release"
    - name: Test Rellic Build
      run: |
        /opt/trailofbits/rellic-decomp-8.0  --input ./tests/tools/decomp/issue_4.bc --output /dev/stdout
  Docker_Linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        llvm: ["800"]
        ubuntu: ["20.04", "19.10", "18.04"]
    steps:
    - uses: actions/checkout@v2
    - name: Build LLVM ${{ matrix.llvm }} on ${{ matrix.ubuntu }}
      run: |
        docker build . -t docker.pkg.github.com/lifting-bits/rellic/rellic-llvm${{ matrix.llvm }}-ubuntu${{ matrix.ubuntu }}-amd64:latest -f Dockerfile --build-arg UBUNTU_VERSION=${{ matrix.ubuntu }} --build-arg ARCH=amd64 --build-arg LLVM_VERSION=${{ matrix.llvm }}
    - name: Push Image for LLVM ${{ matrix.llvm }} on ${{ matrix.ubuntu }}
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: |
        docker login docker.pkg.github.com -u "${GH_USER}" -p "${GH_TOKEN}"
        for i in 1 2 3; do docker push docker.pkg.github.com/lifting-bits/rellic/rellic-llvm${{ matrix.llvm }}-ubuntu${{ matrix.ubuntu }}-amd64:latest && break || sleep 10; done
        docker login -u "${DOCKER_HUB_USER}" -p "${DOCKER_HUB_TOKEN}"
        docker tag docker.pkg.github.com/lifting-bits/rellic/rellic-llvm${{ matrix.llvm }}-ubuntu${{ matrix.ubuntu }}-amd64:latest trailofbits/rellic:llvm${{ matrix.llvm }}-ubuntu${{ matrix.ubuntu }}-amd64
        docker push trailofbits/rellic:llvm${{ matrix.llvm }}-ubuntu${{ matrix.ubuntu }}-amd64
      env:
        GH_USER: ${{ github.actor }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DOCKER_HUB_USER: ${{  secrets.DOCKER_HUB_USER  }}
        DOCKER_HUB_TOKEN: ${{  secrets.DOCKER_HUB_TOKEN  }}
